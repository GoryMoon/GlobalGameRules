buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

apply plugin: 'forge'

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version}" + "-" + "${config.mod_version}"
group = "se.gory_moon" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "GlobalGameRules"

minecraft {
    version = "${config.mc_version}" + "-" + "${config.forge_version}"
    runDir = "eclipse"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_nodoc_20141130"

    replaceIn "GlobalGR.java"
    replace "@MOD_VERSION@", config.mod_version
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}
task sourceJar(type: Jar) {
    from(sourceSets.main.allSource) {
        include '**'
    }
    extension = 'jar'
    classifier = 'sources'
}


artifacts {
    archives devJar
    archives sourceJar
}

uploadArchives {
    repositories.mavenDeployer {
        if (project.hasProperty("maven_url")) {
            println 'Publishing to files server'

            configuration = configurations.deployerJars
            repository(url: project.maven_url) {
                authentication(userName: project.maven_username, password: project.maven_password)
            }
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
            }

            pom.project {
                name project.archivesBaseName
                packaging 'jar'
                description 'GlobalGameRules'
                url 'https://github.com/GoryMoon/GlobalGameRules/'

                scm {
                    url 'https://github.com/GoryMoon/GlobalGameRules/'
                    connection 'scm:git:git://github.com/GoryMoon/GlobalGameRules.git'
                    developerConnection 'scm:git:git@github.com/GoryMoon/GlobalGameRules.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/GoryMoon/GlobalGameRules/issues'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License 3.0'
                        url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'Gory_Moon'
                        name 'Gory_Moon'
                        roles {
                            role 'developer'
                        }
                    }
                }
            }
        }
    }
}
